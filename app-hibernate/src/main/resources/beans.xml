<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd    
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd    
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd    
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd    
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd    
    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd    
    http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.1.xsd    
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd    
    http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd    
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd    
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd    
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.sykj"></context:component-scan>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

<!-- 	<bean id="dataSourceOne" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dbOne.jdbc.driverClassName}" />
		<property name="url" value="${dbOne.jdbc.url}"/>
		<property name="username" value="${dbOne.jdbc.username}" />
		<property name="password" value="${dbOne.jdbc.password}" />
		<property name="initialSize" value="${dbOne.jdbc.initialSize}" />
		<property name="minIdle" value="${dbOne.jdbc.minIdle}" />
		<property name="maxIdle" value="${dbOne.jdbc.maxIdle}" />
		<property name="maxActive" value="${dbOne.jdbc.maxActive}" />
		<property name="maxWait" value="${dbOne.jdbc.maxWait}" />
		<property name="testOnBorrow" value="true"></property> 取得、返回对象和空闲时是否进行验证，检查对象是否有效,true验证，false不验证
  		<property name="testOnReturn" value="true"></property>
  		<property name="testWhileIdle" value="true"></property>
  		<property name="validationQuery" value="SELECT 1"></property>
   		<property name="timeBetweenEvictionRunsMillis" value="30000"></property> 检查无效连接的时间间隔
   		<property name="minEvictableIdleTimeMillis" value="60000"></property>连接闲置的时间
	</bean> -->

	<bean id="dataSourceTwo" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dbTwo.jdbc.driverClassName}" />
		<property name="url" value="${dbTwo.jdbc.url}" />
		<property name="username" value="${dbTwo.jdbc.username}" />
		<property name="password" value="${dbTwo.jdbc.password}" />
		<property name="initialSize" value="${dbTwo.jdbc.initialSize}" />
		<property name="minIdle" value="${dbTwo.jdbc.minIdle}" />
		<property name="maxIdle" value="${dbTwo.jdbc.maxIdle}" />
		<property name="maxActive" value="${dbTwo.jdbc.maxActive}" />
		<property name="maxWait" value="${dbTwo.jdbc.maxWait}" />
		<property name="testOnBorrow" value="true"></property> <!-- 取得、返回对象和空闲时是否进行验证，检查对象是否有效,true验证，false不验证 -->
  		<property name="testOnReturn" value="true"></property>
  		<property name="testWhileIdle" value="true"></property>
  		<property name="validationQuery" value="SELECT 1"></property>
   		<property name="timeBetweenEvictionRunsMillis" value="30000"></property> <!-- 检查无效连接的时间间隔 -->
   		<property name="minEvictableIdleTimeMillis" value="60000"></property><!-- 连接闲置的时间 -->
	</bean>

	
<!-- 	<bean id="dataSourceThree" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dbThree.jdbc.driverClassName}" />
		<property name="url" value="${dbThree.jdbc.url}" />
		<property name="username" value="${dbThree.jdbc.username}" />
		<property name="password" value="${dbThree.jdbc.password}" />
		<property name="initialSize" value="${dbThree.jdbc.initialSize}" />
		<property name="minIdle" value="${dbThree.jdbc.minIdle}" />
		<property name="maxIdle" value="${dbThree.jdbc.maxIdle}" />
		<property name="maxActive" value="${dbThree.jdbc.maxActive}" />
		<property name="maxWait" value="${dbThree.jdbc.maxWait}" />
		<property name="testOnBorrow" value="true"></property> 取得、返回对象和空闲时是否进行验证，检查对象是否有效,true验证，false不验证
  		<property name="testOnReturn" value="true"></property>
  		<property name="testWhileIdle" value="true"></property>
  		<property name="validationQuery" value="SELECT 1"></property>
   		<property name="timeBetweenEvictionRunsMillis" value="30000"></property> 检查无效连接的时间间隔
   		<property name="minEvictableIdleTimeMillis" value="60000"></property>连接闲置的时间
	</bean> -->
	
<!-- 	<bean id="dataSourceFour" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dbFour.jdbc.driverClassName}" />
		<property name="url" value="${dbFour.jdbc.url}" />
		<property name="username" value="${dbFour.jdbc.username}" />
		<property name="password" value="${dbFour.jdbc.password}" />
		<property name="initialSize" value="${dbFour.jdbc.initialSize}" />
		<property name="minIdle" value="${dbFour.jdbc.minIdle}" />
		<property name="maxIdle" value="${dbFour.jdbc.maxIdle}" />
		<property name="maxActive" value="${dbFour.jdbc.maxActive}" />
		<property name="maxWait" value="${dbFour.jdbc.maxWait}" />
		<property name="testOnBorrow" value="true"></property> 取得、返回对象和空闲时是否进行验证，检查对象是否有效,true验证，false不验证
  		<property name="testOnReturn" value="true"></property>
  		<property name="testWhileIdle" value="true"></property>
  		<property name="validationQuery" value="SELECT 1"></property>
   		<property name="timeBetweenEvictionRunsMillis" value="30000"></property> 检查无效连接的时间间隔
   		<property name="minEvictableIdleTimeMillis" value="60000"></property>连接闲置的时间
	</bean> -->
	
	<bean id="dynamicDataSource" class="com.sykj.common.core.DynamicDataSource">
	
		<property name="targetDataSources">
			<map key-type="java.lang.String">
<!-- 				<entry value-ref="dataSourceOne" key="dataSourceOne"></entry> -->
				<entry value-ref="dataSourceTwo" key="dataSourceTwo"></entry> 
<!-- 				<entry value-ref="dataSourceThree" key="dataSourceThree"></entry> 
				<entry value-ref="dataSourceFour" key="dataSourceFour"></entry>  -->
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSourceTwo">
		</property>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop> -->

<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> -->
<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop> -->

				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:/com/sykj/*/entity/*/*.hbm.xml</value>
			</list>
		</property>
<!-- 		<property name="packagesToScan">
			<value>com.sy.ws.entity</value>
		</property> -->
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<aop:config>
		<aop:pointcut id="transactionPointCut" expression="execution(* com.sykj.*.dao..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointCut" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<bean id="dataSourceInterceptor" class="com.sykj.common.core.DataSourceInterceptor" />
</beans>